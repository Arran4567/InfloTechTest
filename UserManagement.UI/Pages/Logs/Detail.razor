@page "/logs/detail/{id:long}"
@using UserManagement.UI.Models
@inject HttpClient Http
@inject IJSRuntime JS

@if (log is null)
{
    <p>Loading...</p>
}
else
{
    <div class="mb-3">
        <label>Type</label>
        <input class="form-control" value="@log.Type" readonly />
    </div>

    <div class="mb-3">
        <label>Description</label>
        <input class="form-control" value="@log.Description" readonly />
    </div>

    <div class="mb-3">
        <label>DateTime</label>
        <input class="form-control" value="@log.DateTime" readonly />
    </div>
}

@code {
    [CascadingParameter] public MainLayout Layout { get; set; } = default!;
    [Parameter] public long id { get; set; }
    private LogListItemViewModel? log;

    protected override void OnInitialized()
    {
        Layout.PageHeader = "Log Detail";
    }

    protected override async Task OnParametersSetAsync()
    {
        var token = await JS.InvokeAsync<string>("localStorage.getItem", "authToken");
        var request = new HttpRequestMessage(HttpMethod.Get, $"/api/logs/detail?id={id}");
        if (!string.IsNullOrEmpty(token))
        {
            request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
        }
        var response = await Http.SendAsync(request);
        if (response.IsSuccessStatusCode)
        {
            log = await response.Content.ReadFromJsonAsync<LogListItemViewModel>();
        }
        else
        {
            log = null;
        }
    }
}


